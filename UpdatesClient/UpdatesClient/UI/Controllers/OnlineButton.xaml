<UserControl x:Class="UpdatesClient.UI.Controllers.OnlineButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UpdatesClient.UI.Controllers"
             xmlns:local2="clr-namespace:UpdatesClient.UI.Pages.MainWindow.Models"
             xmlns:res="clr-namespace:UpdatesClient.Properties"
             mc:Ignorable="d" Height="21"
             d:DataContext="{d:DesignInstance Type=local2:MainWindowModel}">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <DrawingImage x:Key="rightArrowDrawingImage">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V6.08 H11.65 V0 H0 Z">
                    <DrawingGroup.Transform>
                        <TranslateTransform X="0.000179786526132375" Y="0.0031441906467080116" />
                    </DrawingGroup.Transform>
                    <DrawingGroup Opacity="1" Transform="6.12303176911189E-17,1,-1,6.12303176911189E-17,11.65,0">
                        <DrawingGroup Transform="1,0,0,1,0,0.003">
                            <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M11.65,6.08z M0,0z M0.436,0.071A0.253,0.253,0,0,0,0.078,0.429L5.469,5.82 0.077,11.211A0.253,0.253,0,0,0,0.429,11.575L0.435,11.569 6.005,6A0.253,0.253,0,0,0,6.005,5.642z" />
                        </DrawingGroup>
                        <DrawingGroup Transform="1,0,0,1,0.003,0">
                            <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M11.65,6.08z M0,0z M0.254,11.647A0.253,0.253,0,0,1,0.075,11.215L5.466,5.823 0.074,0.433A0.254,0.254,0,0,1,0.433,0.074L6,5.644A0.253,0.253,0,0,1,6,6L0.43,11.57A0.253,0.253,0,0,1,0.254,11.647z" />
                        </DrawingGroup>
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="18"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Stretch" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}"/>
                                <Border x:Name="img" HorizontalAlignment="Left" Height="6" Margin="5,5,0,0" VerticalAlignment="Top" Width="11" Grid.Column="1" Background="White">
                                    <Border.OpacityMask>
                                        <ImageBrush ImageSource="{DynamicResource arrowDown}" Stretch="Uniform"/>
                                    </Border.OpacityMask>
                                </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">

                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="contentPresenter" Property="Foreground" Value="#FFD6D6D6" />
                                <Setter TargetName="img" Property="Background" Value="#FFD6D6D6" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="contentPresenter" Property="Foreground" Value="#FFACACAC" />
                                <Setter TargetName="img" Property="Background" Value="#FFACACAC" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0"/>
        <Style TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="#00000000"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="MenuItemControlTemplate" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="menuHeaderContainer" Focusable="False" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Right" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Top"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="White"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#33FFFFFF"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#7FFFFFFF"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="#0AFF0000"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid x:Name="Grid" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="18"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="0" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch"/>
                    <Border x:Name="img" HorizontalAlignment="Center" Height="6" Margin="0,3,0,0" VerticalAlignment="Center" Width="12" Grid.Column="1" Background="White" Padding="0">
                        <Border.OpacityMask>
                            <ImageBrush ImageSource="{DynamicResource rightArrowDrawingImage}" Stretch="Uniform"/>
                        </Border.OpacityMask>
                    </Border>
                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Center" Margin="0" VerticalOffset="86" ScrollViewer.VerticalScrollBarVisibility="Disabled" VerticalAlignment="Stretch" HorizontalAlignment="Right" Grid.Column="2" HorizontalOffset="0">
                        <Grid VerticalAlignment="Stretch" Margin="0">
                            <Border x:Name="SubMenuBorder" BorderBrush="{x:Null}" BorderThickness="0" Background="#FF3A434F" Padding="2" Margin="0" CornerRadius="3">
                                <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" Background="{x:Null}">
                                    <Grid x:Name="Grid1" RenderOptions.ClearTypeHint="Enabled" Background="{x:Null}">
                                        <Canvas x:Name="Canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" Margin="8,0"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#99FFFFFF"/>
                    <!--<Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>-->
                    <!--<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>-->
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
                </Trigger>
                <!--<Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>-->
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="Menu.Static.Separator" Color="#FFD7D7D7"/>
        <Style x:Key="SeparatorStyle1" TargetType="{x:Type Separator}">
            <Setter Property="Background" Value="{StaticResource Menu.Static.Separator}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Separator}"/>
            <Setter Property="MinHeight" Value="1"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Menu x:Name="menu" Margin="0,0,0,0" VerticalAlignment="Top" Background="{x:Null}">
            <MenuItem x:Name="Username" Header="{Binding Path=UserName}" BorderBrush="{x:Null}" Background="#00000000" Foreground="White" FontSize="16" Template="{DynamicResource MenuItemControlTemplate1}" FontWeight="Light" Margin="0" Padding="2,-2,5,0" >
                <MenuItem Header="{x:Static res:Resources.ViewProfile}" IsEnabled="False" Background="#00000000" BorderBrush="{x:Null}" Template="{DynamicResource MenuItemControlTemplate}" FontSize="13" Margin="10,5,10,13" HorizontalAlignment="Center" Foreground="#7FFFFFFF"/>
                <Separator Style="{DynamicResource SeparatorStyle1}" Background="#72FFFFFF" MinHeight="0" Height="1" Margin="0" />
                <MenuItem Header="{x:Static res:Resources.ActivateCode}" IsEnabled="False" Background="#00000000" BorderBrush="{x:Null}" Template="{DynamicResource MenuItemControlTemplate}" FontSize="13" Margin="10,13" HorizontalAlignment="Center" Foreground="#7FFFFFFF"/>
                <Separator Style="{DynamicResource SeparatorStyle1}" Background="#72FFFFFF" MinHeight="0" Height="1" Margin="0" />
                <MenuItem x:Name="LogoutBtn" Header="{x:Static res:Resources.LogOut}" Background="#00000000" BorderBrush="{x:Null}" Template="{DynamicResource MenuItemControlTemplate}" FontSize="13" Margin="10,13" HorizontalAlignment="Center" Foreground="#7FFFFFFF"/>
            </MenuItem>
        </Menu>
    </Grid>
</UserControl>
